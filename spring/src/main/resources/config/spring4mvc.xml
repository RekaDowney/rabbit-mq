<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 只扫描 Controller 和 ControllerAdvice 注解 -->
    <!-- 可以不配置 RestController 和 RestControllerAdvice，因为这两个分别继承于 Controller 和 ControllerAdvice，可以被扫描到（但为了IDE的导航功能，建议加上） -->
    <context:component-scan base-package="me.junbin.rabbitmq.spring" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.RestControllerAdvice"/>
    </context:component-scan>

    <bean id="utf8" class="java.nio.charset.Charset" factory-method="forName" c:_0="UTF-8"/>

    <!--
        枚举定义为 Bean：
        方式一：采用 util:constant 标签，static-field 指定枚举值（可导航到该枚举）；
        方式二：借助 org.springframework.beans.factory.config.FieldRetrievingFactoryBean 的 staticField 属性执行枚举值（不可导航到该枚举）。
    -->
    <util:constant id="simpleGsonor" static-field="me.junbin.commons.gson.Gsonor.SIMPLE"/>
    <bean id="simpleGsonor2" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean"
          p:staticField="me.junbin.commons.gson.Gsonor.SIMPLE"/>

    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="false">
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <bean
                    class="org.springframework.http.converter.StringHttpMessageConverter"
                    c:defaultCharset-ref="utf8"
            />
            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
            <!--<bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>-->
            <bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"/>
            <!--<bean class="org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter"/>-->
            <bean class="org.springframework.http.converter.json.GsonHttpMessageConverter">
                <property name="gson">
                    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
                          p:targetObject-ref="simpleGsonor"
                          p:targetMethod="getGson"
                    />
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--
        <bean class="org.springframework.http.converter.json.GsonHttpMessageConverter">
            <property name="gson">
                &lt;!&ndash;
                    如下配置将会抛出 java.lang.NoSuchMethodException: java.lang.String.getGson() 异常，原因是将
                    me.junbin.commons.gson.Gsonor.SIMPLE 识别成了 String
                 &ndash;&gt;
                <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
                      p:targetObject="me.junbin.commons.gson.Gsonor.SIMPLE"
                      p:targetMethod="getGson"
                />
            </property>
        </bean>
    -->

</beans>